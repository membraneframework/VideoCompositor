name: build, lint and test
on:
    push:
        branches: [master]
    pull_request:
        types: [opened, synchronize]

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

jobs:
    check:
        runs-on: ubuntu-24.04
        steps:
            - name: 🛠 Install system dependencies
              run: |
                  set -e

                  echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections

                  sudo apt-get update -y -qq
                  sudo apt-get install -y mesa-vulkan-drivers libegl1-mesa-dev libgl1-mesa-dri libxcb-xfixes0-dev ffmpeg libavcodec-dev libavformat-dev libavfilter-dev libavdevice-dev ttf-mscorefonts-installer libopus-dev

                  fc-cache -f

            - name: 🔧 Install the rust toolchain
              uses: dtolnay/rust-toolchain@stable
              with:
                  components: rustfmt, clippy

            - name: 🛠 Setup Node.JS
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: 📥 Checkout repo
              uses: actions/checkout@v4

            - name: 🧩 Git submodules update
              run: |
                cat > .gitmodules << EOF
                [submodule "snapshot_tests/snapshots"]
                        path = snapshot_tests/snapshots
                        url = https://github.com/membraneframework-labs/video_compositor_snapshot_tests.git
                EOF
                git submodule update --init

            - name: 📁 Rust cache
              uses: Swatinem/rust-cache@v2

            - name: 🪢 Generate Chromium Embedded Framework bindings
              run: cargo build --package compositor_chromium

            - name: 📖 Check formatting
              run: cargo fmt --all --check

            - name: 📎 Run clippy
              run: cargo clippy --workspace --all-targets --all-features -- -D clippy::todo -D warnings

            - name: 🛠 Cargo build
              run: |
                cargo build --features decklink
                cargo build --no-default-features

            - name: 📄 Generate JSON schema
              working-directory: ./generate
              run: |
                cargo run --bin generate_from_types -- --check

            - name: 🧪 Run tests
              run: |
                cargo clean
                cargo test -r --no-fail-fast --workspace -- --test-threads=$(($(nproc --all) / 2))

            - name: 🖋️ Run website lint + typecheck + build
              working-directory: ./docs
              run: |
                npm ci
                npm run typecheck && npm run lint --max-warnings=0 && npm run build

            - name: 📦 Upload failed snapshot test artifacts
              if: failure()
              uses: actions/upload-artifact@v4
              with:
                  name: failed_snapshot_tests
                  path: failed_snapshot_tests
                  retention-days: 2

            - name: 📚 Run doctests
              run: cargo test --workspace --doc
