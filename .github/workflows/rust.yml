name: lint and test
on:
    push:
        branches: [master]
    pull_request:
        types: [opened, synchronize]

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

jobs:
    rust:
        runs-on: ubuntu-latest
        steps:
            - name: 🛠 Install system dependencies
              run: |
                  set -e

                  wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
                  sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-jammy.list https://packages.lunarg.com/vulkan/lunarg-vulkan-jammy.list
                  sudo add-apt-repository ppa:kisak/kisak-mesa
                  echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections

                  sudo apt-get update -y -qq
                  sudo apt-get install -y libegl1-mesa libgl1-mesa-dri libxcb-xfixes0-dev vulkan-sdk mesa-vulkan-drivers ffmpeg libavcodec-dev libavformat-dev libavfilter-dev libavdevice-dev ttf-mscorefonts-installer

            - name: 🔧 Install the rust toolchain
              uses: dtolnay/rust-toolchain@stable

            - name: 🔬 Install nextest
              uses: taiki-e/install-action@v2
              with:
                  tool: cargo-nextest

            - name: 📥 Checkout repo
              uses: actions/checkout@v3
              with:
                  submodules: 'true'

            - name: 📁 Rust cache
              uses: Swatinem/rust-cache@v2

            - name: 🪢 Generate Chromium Embedded Framework bindings
              run: cargo build --package compositor_chromium

            - name: 📖 Check formatting
              run: cargo fmt --all --check

            - name: 📎 Run clippy
              run: cargo clippy --workspace --all-targets --all-features -- -D warnings

            - name: 📄 Generate JSON schema
              run: cargo run --bin generate_json_schema

            - name: 🧪 Run tests
              run: cargo nextest run --no-fail-fast --workspace

            - name: 📦 Upload failed snapshot test artifacts
              if: failure()
              uses: actions/upload-artifact@v3
              with:
                  name: failed_snapshot_tests
                  path: failed_snapshot_tests

            - name: 📚 Run doctests
              run: cargo test --workspace --doc
