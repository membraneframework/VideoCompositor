"use strict";(self.webpackChunkcompositor_live=self.webpackChunkcompositor_live||[]).push([[252],{2097:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var o=t(5893),n=t(1151);const r={},s="Introduction",a={id:"intro",title:"Introduction",description:"Live compositor is an application for real-time video processing/transforming/composing, providing simple, language-agnostic API for live video rendering. It targets real-time use cases, like video conferencing, live-streaming, or broadcasting (e.g. with WebRTC / HLS / RTMP).",source:"@site/pages/intro.md",sourceDirName:".",slug:"/intro",permalink:"/video_compositor/docs/intro",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",next:{title:"Get started",permalink:"/video_compositor/docs/get-started"}},c={},d=[];function p(e){const i={a:"a",h1:"h1",p:"p",...(0,n.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.h1,{id:"introduction",children:"Introduction"}),"\n",(0,o.jsxs)(i.p,{children:["Live compositor is an application for real-time video processing/transforming/composing, providing simple, language-agnostic API for live video rendering. It targets real-time use cases, like video conferencing, live-streaming, or broadcasting (e.g. with ",(0,o.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/WebRTC",children:"WebRTC"})," / ",(0,o.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/HTTP_Live_Streaming",children:"HLS"})," / ",(0,o.jsx)(i.a,{href:"https://en.wikipedia.org/wiki/Real-Time_Messaging_Protocol",children:"RTMP"}),")."]}),"\n",(0,o.jsxs)(i.p,{children:["Compositor is a standalone media server. API is language, and technology agnostic. Video input and output streams are sent via RTP and all the configuration is done over HTTP ",(0,o.jsx)(i.a,{href:"https://github.com/membraneframework/video_compositor/wiki/API-%E2%80%90-general",children:"API"}),". At some point, we plan to provide SDKs for specific languages, but you should be able to do everything SDK provides just using API."]})]})}function l(e={}){const{wrapper:i}={...(0,n.a)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},1151:(e,i,t)=>{t.d(i,{Z:()=>a,a:()=>s});var o=t(7294);const n={},r=o.createContext(n);function s(e){const i=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),o.createElement(r.Provider,{value:i},e.children)}}}]);