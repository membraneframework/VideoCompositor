"use strict";(self.webpackChunkcompositor_live=self.webpackChunkcompositor_live||[]).push([[5195],{4846:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var i=r(5893),t=r(1151);const s={sidebar_position:6,hide_table_of_contents:!0},a="Shader",d={id:"api/components/Shader",title:"Shader",description:"Shader applies transformation defined via WGSL shader on its children. Learn more.",source:"@site/pages/api/components/Shader.md",sourceDirName:"api/components",slug:"/api/components/Shader",permalink:"/docs/api/components/Shader",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,hide_table_of_contents:!0},sidebar:"sidebar",previous:{title:"Text",permalink:"/docs/api/components/Text"},next:{title:"Image",permalink:"/docs/api/components/Image"}},o={},c=[{value:"Shader",id:"shader-1",level:2},{value:"Properties",id:"properties",level:4},{value:"ShaderParam",id:"shaderparam",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"shader",children:"Shader"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Shader"})," applies transformation defined via WGSL shader on its children. ",(0,i.jsx)(n.a,{href:"../../concept/shaders",children:"Learn more."})]}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["To use this component, you need to first register the shader with matching ",(0,i.jsx)(n.code,{children:"shader_id"})," using ",(0,i.jsx)(n.a,{href:"../routes#register-renderer",children:(0,i.jsx)(n.code,{children:"RegisterRenderer"})})," request."]})}),"\n",(0,i.jsx)(n.h2,{id:"shader-1",children:"Shader"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'type Shader = {\n  type: "shader";\n  id: string;\n  children?: Component[];\n  shader_id: string;\n  shader_param: ShaderParam;\n  resolution: {\n    width: u32,\n    height: u32,\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"id"})," - Id of a component."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"children"})," - List of component's children."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"shader_id"})," - Id of a shader. It identifies a shader registered using a ",(0,i.jsx)(n.a,{href:"../routes#register-renderer",children:(0,i.jsx)(n.code,{children:"RegisterRenderer"})})," request."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"shader_param"})," - Object that will be serialized into a ",(0,i.jsx)(n.code,{children:"struct"})," and passed inside the shader as:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-wgsl",children:"@group(1) @binding(0) var<uniform> user_defined_var: UserDefinedStruct;\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["This object's structure must match the structure defined in a shader source code. Currently, we do not handle memory layout automatically.\nTo achieve the correct memory alignment, you might need to pad your data with additional fields. See ",(0,i.jsx)(n.a,{href:"https://www.w3.org/TR/WGSL/#alignment-and-size",children:"WGSL documentation"})," for more details."]})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"resolution"})," - Resolution of a texture where shader will be executed."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"shaderparam",children:"ShaderParam"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:'type ShaderParam =\n  | { type: "f32"; value: f32 }\n  | { type: "u32"; value: u32 }\n  | { type: "i32"; value: i32 }\n  | { type: "list"; value: ShaderParam[] }\n  | { type: "struct"; value: ShaderParamStructField[] }\n\ntype ShaderParamStructField =\n  | { field_name: string; type: "f32"; value: f32 }\n  | { field_name: string; type: "u32"; value: u32 }\n  | { field_name: string; type: "i32"; value: i32 }\n  | { field_name: string; type: "list"; value: ShaderParam[] }\n  | { field_name: string; type: "struct"; value: ShaderParamStructField[] }\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>d,a:()=>a});var i=r(7294);const t={},s=i.createContext(t);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);