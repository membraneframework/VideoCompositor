"use strict";(self.webpackChunkcompositor_live=self.webpackChunkcompositor_live||[]).push([[195],{4846:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var t=r(5893),i=r(1151);const s={},a=void 0,d={id:"api/components/Shader",title:"Shader",description:"Shader",source:"@site/pages/api/components/Shader.md",sourceDirName:"api/components",slug:"/api/components/Shader",permalink:"/docs/api/components/Shader",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Rescaler",permalink:"/docs/api/components/Rescaler"},next:{title:"Text",permalink:"/docs/api/components/Text"}},l={},c=[{value:"Shader",id:"shader",level:2},{value:"Properties",id:"properties",level:4},{value:"ShaderParam",id:"shaderparam",level:2},{value:"ShaderParamStructField",id:"shaderparamstructfield",level:2},{value:"Resolution",id:"resolution",level:2},{value:"Properties",id:"properties-1",level:4}];function o(e){const n={code:"code",h2:"h2",h4:"h4",li:"li",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"shader",children:"Shader"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'type Shader = {\n  type: "shader",\n  id: string,\n  children?: Component[],\n  shader_id: string,\n  shader_param: ShaderParam,\n  resolution: Resolution,\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"properties",children:"Properties"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"shader_id"})," - ID of a previously registered Shader."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"shader_param"})," - Object that will be serialized into a ",(0,t.jsx)(n.code,{children:"struct"})," and passed inside the shader as:","\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-wgsl",children:"@group(1) @binding(0) var<uniform>\n"})}),"\n","Note: This object's structure must match the structure defined in a shader source code."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"resolution"})," - Resolution of a texture where shader will be executed."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"shaderparam",children:"ShaderParam"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'type ShaderParam = \n  | {\n      type: "f32",\n      value: f32,\n    }\n  | {\n      type: "u32",\n      value: u32,\n    }\n  | {\n      type: "i32",\n      value: i32,\n    }\n  | {\n      type: "list",\n      value: ShaderParam[],\n    }\n  | {\n      type: "struct",\n      value: ShaderParamStructField[],\n    }\n'})}),"\n",(0,t.jsx)(n.h2,{id:"shaderparamstructfield",children:"ShaderParamStructField"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'type ShaderParamStructField = \n  | {\n      type: "f32",\n      value: f32,\n      field_name: string,\n    }\n  | {\n      type: "u32",\n      value: u32,\n      field_name: string,\n    }\n  | {\n      type: "i32",\n      value: i32,\n      field_name: string,\n    }\n  | {\n      type: "list",\n      value: ShaderParam[],\n      field_name: string,\n    }\n  | {\n      type: "struct",\n      value: ShaderParamStructField[],\n      field_name: string,\n    }\n'})}),"\n",(0,t.jsx)(n.h2,{id:"resolution",children:"Resolution"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"type Resolution = {\n  width: u32,\n  height: u32,\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"properties-1",children:"Properties"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"width"})," - Width in pixels."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"height"})," - Height in pixels."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>d,a:()=>a});var t=r(7294);const i={},s=t.createContext(i);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);