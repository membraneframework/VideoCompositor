"use strict";(self.webpackChunkcompositor_live=self.webpackChunkcompositor_live||[]).push([[193],{9363:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>n,metadata:()=>a,toc:()=>p});var o=r(5893),i=r(1151);const n={},s="API",a={id:"api/api",title:"API",description:"Compositor exposes HTTP API. After spawning a compositor process the first request has to be an init request. After the compositor is initialized you can configure the processing pipeline using RegisterInputStream, RegisterOutputStre, UpdateScene, and other requests. When you are ready to start receiving the output stream from the compositor you can send a Start request.",source:"@site/pages/api/api.md",sourceDirName:"api",slug:"/api/",permalink:"/docs/api/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},c={},p=[];function d(e){const t={a:"a",code:"code",h1:"h1",p:"p",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"api",children:"API"}),"\n",(0,o.jsxs)(t.p,{children:["Compositor exposes HTTP API. After spawning a compositor process the first request has to be ",(0,o.jsx)(t.a,{href:"https://github.com/membraneframework/video_compositor/wiki/API-%E2%80%90-general#init",children:"an init request"}),". After the compositor is initialized you can configure the processing pipeline using ",(0,o.jsx)(t.code,{children:"RegisterInputStream"}),", ",(0,o.jsx)(t.code,{children:"RegisterOutputStre"}),", ",(0,o.jsx)(t.code,{children:"UpdateScene"}),", and other requests. When you are ready to start receiving the output stream from the compositor you can send a ",(0,o.jsx)(t.a,{href:"https://github.com/membraneframework/video_compositor/wiki/API-%E2%80%90-general#start",children:(0,o.jsx)(t.code,{children:"Start"})})," request."]}),"\n",(0,o.jsxs)(t.p,{children:["API is served by default on port ",(0,o.jsx)(t.code,{children:"8001"}),", but it can be configured via ",(0,o.jsx)(t.code,{children:"MEMBRANE_VIDEO_COMPOSITOR_API_PORT"})," environment variable."]}),"\n",(0,o.jsxs)(t.p,{children:["After the compositor is started with a ",(0,o.jsx)(t.a,{href:"https://github.com/membraneframework/video_compositor/wiki/API-%E2%80%90-general#start",children:(0,o.jsx)(t.code,{children:"Start"})})," request you can keep using ",(0,o.jsx)(t.code,{children:"RegisterInputStream"}),", ",(0,o.jsx)(t.code,{children:"RegisterOutputStream"}),", ",(0,o.jsx)(t.code,{children:"UpdateScene"})," and others to modify the pipeline in real-time."]})]})}function u(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,t,r)=>{r.d(t,{Z:()=>a,a:()=>s});var o=r(7294);const i={},n=o.createContext(i);function s(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(n.Provider,{value:t},e.children)}}}]);